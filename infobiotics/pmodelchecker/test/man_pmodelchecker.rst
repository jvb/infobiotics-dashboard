==============
 pmodelchecker
==============

--------------------------------------------------------------------------------------------------------------------------------------
formal analysis of spatio-temporal properties of P system models using the model checkers PRISM and MC2 and the simulator mcss
--------------------------------------------------------------------------------------------------------------------------------------

:Author: fxc@cs.nott.ac.uk
:Date:   2010-02-06
:Copyright: Infobiotics
:Version: 0.0.7
:Manual section: 1

.. TODO: authors and author with name <email>

SYNOPSIS
========

  pmodelchecker PARAMETERFILE [--PARAMETER=VALUE ] ...

DESCRIPTION
===========

pmodelchecker is an application that uses PRISM (http://www.prismmodelchecker.org/) and MC2 (http://www.brc.dcs.gla.ac.uk/software/mc2/) to perfom formal model analysis of spatio-temporal properties of P system models. The spatio-temporal properties must be specified in the temporal logics CSL (Continuous Stochastic Logic) or PLTL (Probabilistic Linear Time Logic). The P system models must be specified using the variant of membrane systems called LPP systems (Lattice Population P systems), see http://www.infobiotic.org/infobiotics-workbench/modelBuilding/modelBuilding.html. When using MC2 for simulative model checking it relies in the multicompartmental stochastic simulator mcss, see http://www.infobiotic.org/infobiotics-workbench/.

The settings to run pmodelchecker can be specified in an XML parameter file or supplied through the command line.   


OPTIONS
=======

--model_specification=<file>			Name of the file containing the model specification as an LPP-system 

--temporal_formulas=<file>				Name of the file containing the temporal logic formulas formalising the properties to check

--model-checker=<PRISM|MC2>			Name of the model checker to use, PRISM or MC2

--PRISM_model=<file> 					Name of the file where to output the translation of the input LPP model into the PRISM language. Only to be specified when the model checker PRISM is used

--task=<Translate|Build|Verify|Approximate>		Task to perform when using PRISM as model checker. Translate LPP-system into the PRISM language, build corresponding Markov chain, verify or approximate the input properties

--model_parameters=<string>  			A string stating the values of the parameters in the model as follows param=lb:ub:s,param=lb:ub:s, ... where   lb is the lowe bound, up is the upper bound and s is the step. Parameters with a single value can also be specified as follows param=value,param=value, ...

--formula_parameters=<string>			A string stating the values of the parameters in the formulas as follows param=lb:ub:s,param=lb:ub:s, ... where lb is the lower bound, up is the upper bound and s is the step. Parameters with a single value can also be specified as follows param=value,param=value, ...


--transitions_file=<file>				Name of the file where to output the transitions of the Markov chain generated from the LPP-system when using PRISM as the model checker witht the tasks Build or Verify 

--states_file=<file>						Name of the file where to output the states of the Markov chain generated from the LPP-system when using PRISM as the model checker witht the tasks Build or Verify

--number_samples=<integer>			Number of simulations to generate when taking an approximate or simulative approach to model checking 

--precision=<double>					Precision to achieve whith respect to real value when generating an estimate using approximate or simulative model checking

--confidence=<double>				Confidence to achieve whith respect to real value when generating an estimate using approximate or simulative model checking

--simulations_generatedHDF5=<true|false>			Flag to determine if the simulations needed to run MC2 are available in HDF5 format

--simulations_generatedMC2=<true|false>			Flag to determine if the simulations needed to run MC2 are available in MC2 format

--positions=<string>										A string stating the positions of the P systems under study. The format of the string is the following "x_1,y_1:x_2,y_2: ... :x_n,y_n"  

--molecular_species=<string>							A string stating the name of the molecular species under study. The format of the string is the following "moleculeName_1,moleculeName_2, ...,moleculeName_n"

--simulations_file_hdf5=<file>						Name of the file containing the simulations in HDF5 format or where to write them when using mcss

--simulations_file_MC2=<file>							Name of the file containing the simulations in MC2 format or where to write them

--mcss_params_file=<file>								Name of the file containing the parameters to run mcss in order to generate the necessary simulations when using MC2 as the model checker

--results_file=<file>									Name of the file where to write the answers to the temporal logic formulas generated by the model checker


SEE ALSO
========

* mcss
* poptimizer
